{ Validation }
Title 		= "[12_HSUPA_R6][7_AGL8960]R6-AGL01-1: Agilent 8960 FDD test: RMC12.2k +HSPA (10ms E-DCH TTI)."
ModuleID 	= MOD_DUMMYURR
MsgID 		= MSG_ID_UDPS_R6_AGL01_1

/******************************************************************************
* Data Structure accomnying the above primitive
typedef struct
{
    kal_uint8           ref_count;
    kal_uint16         msg_len;
    
    kal_uint16         uarfcn_bts1;
    kal_uint16         psc_bts1; 
    kal_int8             max_tx_power;
    kal_int8	            cpich_tx_power; //RACH use	
    kal_bool             sttd_ind;       //RACH use
    udps_RMC_type_struct udps_RMC_type;
    kal_uint32          ul_sc;           
    kal_uint16          DOFF_bts1;            
    kal_uint8            Tdpch_rl1;        
    kal_uint16          OVSFdpch_rl1;

    //HSDPA parameters
    kal_uint8            ssc_of_hsscch;
    kal_uint8            num_of_hsscch;
    kal_uint16          ovsf_of_hsscch_0;    
    kal_uint16          ovsf_of_hsscch_1; 
    kal_uint16          ovsf_of_hsscch_2; 
    kal_uint16          ovsf_of_hsscch_3;     
    kal_int8              meas_po ;// -12~26 * 0.5
    kal_uint8            cqi_k;
    kal_uint8            cqi_repetition_factor; 
    kal_uint8            delta_cqi;
    
    kal_uint8            delta_nack;
    kal_uint8            delta_ack;
    kal_uint8            acknack_repe_factor;    
    kal_uint8            harq_preamble_mode;  
    
    kal_uint8            process_num;
    kal_uint8            beta_c; // for HSDPA FDD test (TS34.121 5.2A)
    kal_uint8            beta_d; // for HSDPA FDD test (TS34.121 5.2A)

    //E-DCH parameters
    kal_uint8         edch_target_etfci; //E-TFCI 0~127 128: for E-TFCI switching test 129: for all E-TFCI blocked test
    kal_bool          pri_e_rnti_valid;
    kal_uint16        pri_e_rnti;     //0~65535
    kal_bool          sec_e_rnti_valid;            
    kal_uint16        sec_e_rnti;   //0~65535              
    edch_tti_E        edch_tti;   //EDCH_TTI_2, EDCH_TTI_10

    kal_uint16        eagch_ovsf; //E-AGCH OVSF code (0 ~ 255)

    kal_uint8         ehich_info_num; // Number of E-HICH info: 1~4
    kal_uint16        ehich_ovsf_rl1;  // E-HICH OVSF code of RL1 (0 ~ 127)
    kal_uint16        ehich_ovsf_rl2;  // E-HICH OVSF code of RL2 (0 ~ 127)
    kal_uint16        ehich_ovsf_rl3;  // E-HICH OVSF code of RL3 (0 ~ 127)
    kal_uint16        ehich_ovsf_rl4;  // E-HICH OVSF code of RL3 (0 ~ 127)
    kal_uint8         ehich_SignatureSeq_rl1; // E-HICH signature sequence of RL1 (0~39)
    kal_uint8         ehich_SignatureSeq_rl2; // E-HICH signature sequence of RL2 (0~39)
    kal_uint8         ehich_SignatureSeq_rl3; // E-HICH signature sequence of RL3 (0~39)
    kal_uint8         ehich_SignatureSeq_rl4; // E-HICH signature sequence of RL4 (0~39)
    kal_uint8         ehich_TpcIndex_rl1;  // E-HICH TPC combination index of RL1 (0 ~ 5)
    kal_uint8         ehich_TpcIndex_rl2;  // E-HICH TPC combination index of RL2 (0 ~ 5)
    kal_uint8         ehich_TpcIndex_rl3;  // E-HICH TPC combination index of RL3 (0 ~ 5)
    kal_uint8         ehich_TpcIndex_rl4;  // E-HICH TPC combination index of RL4 (0 ~ 5)

    kal_uint8         ergch_info_num;   // Number of E-RGCH info: 0~4
    kal_uint8         ergch_SignatureSeq_rl1;  // E-RGCH signature sequence of RL1 (0~39)
    kal_uint8         ergch_SignatureSeq_rl2;  // E-RGCH signature sequence of RL2 (0~39)
    kal_uint8         ergch_SignatureSeq_rl3;  // E-RGCH signature sequence of RL3 (0~39)
    kal_uint8         ergch_SignatureSeq_rl4;  // E-RGCH signature sequence of RL4 (0~39)
    kal_uint8         ergch_RgCombIndex_rl1; // E-RGCH RG combination index of RL1 (0 ~ 5)
    kal_uint8         ergch_RgCombIndex_rl2; // E-RGCH RG combination index of RL2 (0 ~ 5)
    kal_uint8         ergch_RgCombIndex_rl3; // E-RGCH RG combination index of RL3 (0 ~ 5)
    kal_uint8         ergch_RgCombIndex_rl4; // E-RGCH RG combination index of RL4 (0 ~ 5)

    kal_uint8         etfci_table_index;      // E-TFCI table index. 0~1
    edch_sf_E         max_ch_code;      // Max. channelisation code (EDCH_SF256, EDCH_SF128, ..., EDCH_2SF2, EDCH_2SF2AND2SF4)
    kal_uint8         pl_non_max;      // PLnon-max= pl_non_max * 0.04; pl_non_max: Integer(11..25)

    kal_uint8         edpcch_po;          // E-DPCCH/DPCCH power offset. 0~8
    kal_uint8         hsupa_sub_test;     // sub-test id used to configure ref E-TFCI (TS34.121 5.2B)
} udps_r6_agl01_1_struct;  // R6-AGL01-1   
*
*******************************************************************************/


{Parameters}
/******************************************************************************
* 1. The following is the constrained range for the input of this value.
* 2. Some combination of the following bit-fields may be suported
* 3. The parameter range can be changed to support combinations of different bands
*******************************************************************************/

/* [Variable Name] "corresponding label showen on GUI" */
[uarfcn_bts1] "UARFCN of Serving Cell "
10562~10838
@10700

[psc_bts1] "PSC of Serving Cell"
0~511
@0



/******************************************
* For RACH 
******************************************/
[max_tx_power] "Maximum allowed UL TX power [dBm]"
-50~33
@24

[cpich_tx_power] "CPICH TX power [dBm]"
-10~50
@0

[sttd_ind] "Use STTD or not"
@KAL_FALSE

/******************************************
* For DCH 
******************************************/
[udps_RMC_type] "Choose One of the FOUR standard RMC"
RMC_144
@RMC_12_2
RMC_64
RMC_384
RMC_BTFD

[ul_sc] "(DCH) UL Scrambling code Num."
0~16777215
@0

[DOFF_bts1] "(DCH) Default DPCH Offset [x512 chips]"
0~599
@0

[Tdpch_rl1] "(DCH) Timing offset between 1st DPCH and CPICH [x256 chips]"
0~149
@0

[OVSFdpch_rl1] "(DCH) OVSF code of DL DCH: 0~SF-1"
0~511
@20


[beta_c] "beta_c of UL DPCH (TF1,TF0)"
1~15
@8

[beta_d] "beta_d of UL DPCH (TF1,TF0)"
1~15
@15



/******************************************
* For HS-DSCH 
******************************************/
[ssc_of_hsscch] "sc of hs_scch"
0~16
@0

[num_of_hsscch] " number of HS-SCCH "
1~4
@1

[ovsf_of_hsscch_0] "ovsf_of_hsscch_0"
0~127
@2

[ovsf_of_hsscch_1] "ovsf_of_hsscch_1"
0~127
@6

[ovsf_of_hsscch_2] "ovsf_of_hsscch_2"
0~127
@9

[ovsf_of_hsscch_3] "ovsf_of_hsscch_3"
0~127
@10

[meas_po]  "Measurement power offset. Range: -12~26"
-12~26
@0

[cqi_k] "0=0ms,1=2ms,2=4ms,3=8ms,4=10ms,5=20ms,6=40ms,7=80ms,8=160ms"
0~8
@1
[cqi_repetition_factor] " CQI repetition factor "
1~4
@1
[delta_cqi] " delta CQI 0~8 "
0~8
@5
[acknack_repe_factor] " HARQ ACK/NACK repetition factor "
1~4
@1

[delta_nack] " delta NACK 0~8 "
0~8
@5

[delta_ack] " delta ACK 0~8 "
0~8
@5

[harq_preamble_mode] "enable preamble or not"
0~1
@0

[process_num]  "number of harq process"
1~8
@6

/******************************************
* For E-DCH 
******************************************/
[edch_target_etfci] "E-TFCI under test (0~127,128:E-TFCI switch,129:all E-TFCI blocked)"
0~129
@45

[pri_e_rnti_valid] "If primary E-RNTI field is valid or not"
@KAL_TRUE

[pri_e_rnti] "Primary E-RNTI assigned to UE"
0~65535
@43690

[sec_e_rnti_valid] "If secondary E-RNTI field is valid or not"
@KAL_FALSE

[sec_e_rnti] "Secondary E-RNTI assigned to UE"
0~65535
@21845

[edch_tti] "E-DCH TTI 2ms or 10ms"
EDCH_TTI_2
@EDCH_TTI_10

[eagch_ovsf] "E-AGCH OVSF code:(0~255)"
0~255
@42

[ehich_info_num] "Number of E-HICH info:(1~4)"
1~1
@1

[ehich_ovsf_rl1] "E-HICH OVSF code of RL1:(0~127)"
22~22
@22

[ehich_SignatureSeq_rl1] "E-HICH signature sequence of RL1:(0~39)"
1~1
@1

[ehich_TpcIndex_rl1] "E-HICH TPC combination index of RL1:(0~5)"
0~5
@0

[ergch_info_num] "Number of E-RGCH info:(0 ~ 4)"
1~1
@1

[ergch_SignatureSeq_rl1] "E-RGCH signature sequence of RL1:(0~39)"
0~0
@0

[ergch_RgCombIndex_rl1] "E-RGCH RG combination index of RL1:(0~5)"
0~5
@0

[etfci_table_index] "E-TFCI table index:(0~1)"
0~1
@0

[max_ch_code] "Max. channelisation code"
EDCH_SF256
EDCH_SF128
EDCH_SF64
EDCH_SF32
EDCH_SF16
EDCH_SF8
EDCH_SF4
EDCH_2SF4 
@EDCH_2SF2
EDCH_2SF2AND2SF4

[pl_non_max] "PLnon-max= pl_non_max * 0.04; pl_non_max: Integer(11..25)"
21~21
@21

[edpcch_po] "E-DPCCH/DPCCH power offset. (0~8)"
0~8
@5

[hsupa_sub_test] "HSUPA sub-test ID (1~5)"
1~5
@1
